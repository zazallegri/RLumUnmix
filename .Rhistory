list.functions.in.file(rstudioapi::getSourceEditorContext()$path, alphabetic = TRUE)
getwd()
list.functions.in.file(all_functions.r, alphabetic = TRUE)
path
getwd(9)
getwd()
list.functions.in.file(all_functions, alphabetic = TRUE)
install.packages("NCmisc")
list.functions.in.file(filename, alphabetic = TRUE)
list.functions.in.file(all_functions.r, alphabetic = TRUE)
list.functions.in.file(all_functions, alphabetic = TRUE)
library("NCmisc")
list.functions.in.file(all_functions.r, alphabetic = TRUE)
library("NCmisc")
file.choose()
list.functions.in.file(file.choose())
output <- list.functions.in.file(file.choose())
View(output)
output[["package:utils"]]
output[["character(0)"]]
output[["package:graphics"]]
library(devtools)
use_package("sandbox")
output
keys(output)
colnames(output)
output
names(output)
use_package("base")
use_package("grDevices")
use_package("stats")
use_package("graphics")
use_package("methods")
use_package("utils")
use_package("RLumModel")
use_package("Luminescence")
use_package("xx")
use_package("fingerPro")
output
output[["character(0)"]]
use_package("ggpmisc")
use_package("glue")
use_package("hash")
use_package("reshape2")
use_package("base")
use_package("dplyr")
use_package("tcltk")
use_package("tgcd")
use_package("tgcd")
use_package("inflect")
use_package("Inflect")
use_package("parcma")
use_r("compare_parameters")
devtools::load_all(".")
install.packages("pracma")
library(pracma)
use_package("pracma")
devtools::load_all(".")
devtools::load_all(".")
compare_parameters()
compare_parameters()
.set_pars("Bailey2001")
library(RLumModel)
.set_pars("Bailey2001")
devtools::load_all(".")
compare_parameters(RLumModel::.set_pars("Bailey2001), RLumModel::.set_pars("Bailey2001))
compare_parameters(.set_pars("Bailey2001), .set_pars("Bailey2001))
library(RLumModel)
compare_parameters(.set_pars("Bailey2001), .set_pars("Bailey2001))
compare_parameters(RLumModel::.set_pars("Bailey2001), RLumModel::.set_pars("Bailey2001))
compare_parameters(RLumModel::.set_pars("Bailey2001"), RLumModel::.set_pars("Bailey2001"))
devtools::load_all(".")
compare_parameters(RLumModel::.set_pars("Bailey2001"), RLumModel::.set_pars("Bailey2001"))
use_r("measure_SAR_OSL_copy")
devtools::load_all(".")
devtools::load_all(".")
?measure_SAR_OSL_copy
use_r("prep_parameters_from_aliquot")
devtools::load_all(".")
devtools::load_all(".")
use_r("Make_custom_model_and_retrieve_OSL_TL_metrics")
devtools::load_all(".")
set_pars("Bailey2001")$n
.set_pars("Bailey2001")$n
.set_pars("Bailey2001")$n$n
use_r("Separate_numeric_and_non_numeric_part")
devtools::load_all(".")
devtools::load_all(".")
Separate_numeric_and_non_numeric_part("osl_E_th1)
Separate_numeric_and_non_numeric_part("osl_E_th1)
devtools::load_all(".")
Separate_numeric_and_non_numeric_part('osl_E_th1')
devtools::load_all(".")
devtools::load_all(".")
?Separate_numeric_and_non_numeric_part
use_r("Get_param_normal_dist_list_of_values")
devtools::load_all(".")
devtools::load_all(".")
?Get_param_normal_dist_list_of_values
use_r("Update_parameter_in_rulebook")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
use_r("set_Rule_for_all_model_parameters")
devtools::load_all(".")
devtools::load_all(".")
use_r("Perform_CTS_3_sources")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?Perform_CTS_3_sources
